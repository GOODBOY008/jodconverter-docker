name: Build and Push Docker Images

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set lowercase repository name
      id: repo
      run: |
        echo "name=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT
        echo "owner=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_OUTPUT

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata for runtime
      id: meta-runtime
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ steps.repo.outputs.name }}-runtime
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Extract metadata for examples
      id: meta-examples
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ steps.repo.outputs.name }}-examples
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    # Build runtime images first
    - name: Build and push runtime JRE image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./runtime/Dockerfile
        target: jre
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta-runtime.outputs.tags }}
        labels: ${{ steps.meta-runtime.outputs.labels }}
        build-args: |
          JAVA_VERSION=21
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push runtime JDK image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./runtime/Dockerfile
        target: jdk
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta-runtime.outputs.tags }}-jdk
        labels: ${{ steps.meta-runtime.outputs.labels }}
        build-args: |
          JAVA_VERSION=21
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # Build examples images (depend on runtime)
    - name: Build and push examples GUI image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./examples/Dockerfile
        target: gui
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta-examples.outputs.tags }}-gui
        labels: ${{ steps.meta-examples.outputs.labels }}
        build-args: |
          BASE_REGISTRY=${{ env.REGISTRY }}/${{ steps.repo.outputs.name }}-runtime
          BASE_VERSION=latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push examples REST image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./examples/Dockerfile
        target: rest
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta-examples.outputs.tags }}-rest
        labels: ${{ steps.meta-examples.outputs.labels }}
        build-args: |
          BASE_REGISTRY=${{ env.REGISTRY }}/${{ steps.repo.outputs.name }}-runtime
          BASE_VERSION=latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  test:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set lowercase repository name
      id: repo
      run: |
        echo "name=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build test images
      run: |
        ./scripts/build.sh --registry test --version pr-${{ github.event.number }}

    - name: Test GUI image
      run: |
        docker run --rm -d --name test-gui -p 8080:8080 test/jodconverter-examples:gui
        sleep 30
        curl -f http://localhost:8080 || exit 1
        docker stop test-gui

    - name: Test REST image
      run: |
        docker run --rm -d --name test-rest -p 8081:8080 test/jodconverter-examples:rest
        sleep 30
        curl -f http://localhost:8081 || exit 1
        docker stop test-rest
